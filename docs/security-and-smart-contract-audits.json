{
    "doc": {
        "metadata": {
            "image": [],
            "title": "",
            "description": ""
        },
        "api": {
            "method": "get",
            "url": "",
            "auth": "required",
            "results": {
                "codes": [
                    {
                        "name": "",
                        "code": "{}",
                        "language": "json",
                        "status": 200
                    },
                    {
                        "name": "",
                        "code": "{}",
                        "language": "json",
                        "status": 400
                    }
                ]
            },
            "params": []
        },
        "next": {
            "description": "",
            "pages": []
        },
        "algolia": {
            "recordCount": 5,
            "publishPending": false,
            "updatedAt": "2023-02-20T21:26:13.279Z"
        },
        "title": "Security and Smart Contract Audits",
        "icon": "",
        "updates": [],
        "type": "basic",
        "slug": "security-and-smart-contract-audits",
        "excerpt": "",
        "body": "### Summary\n\nAt Reservoir we take smart contract security very seriously to ensure the protection of our developers and their users. Below is a breakdown of the smart contracts used within the Reservoir ecosystem and their security/audit status.\n\n### Listing\n\nReservoir aggregates different NFT exchange protocols, allowing you to access them all through a single, simplified interface. All supported protocols have undergone extensive audits:\n\n- [Seaport](https://github.com/ProjectOpenSea/seaport) (used by OpenSea)\n- [0xV4](https://s3.us-east-2.amazonaws.com/zeips.0x.org/audits/abdk-consulting/ABDK_0x_Solidity_v_1_0.pdf) (used by Coinbase)\n- [LooksRare](https://github.com/trailofbits/publications/blob/master/reviews/LooksRare.pdf)\n- [X2Y2](https://docs.x2y2.io/assets/files/X2Y2_Protocol_Report-93b524ab7d8e9a000efcfeec12fc4aa4.pdf)\n\nWhen you list an NFT through a Reservoir-powered marketplace, the listing happens through one of the above protocols. By default, Seaport is used, but each team who deploys a marketplace chooses which to use.\n\nTo list, you must approve the exchange contract to transfer your tokens. This is exactly the same as if you listed directly on another marketplace. In fact, if you have already approved a particular exchange contract through OpenSea, Coinbase or LooksRare, you don\u2019t need to do it again on a Reservoir-powered marketplace. You\u2019re approving the underlying exchange, not Reservoir.\n\n### Purchasing\n\nSingle item sales are executed via the order's native exchange contract. Multi-item sales are executed through Reservoir\u2019s Router contract, enabling users to purchase items from different marketplaces in one transaction.\n\nReservoir's Router contract has had the following audits:\n\n- V3 internally audited by multiple teams, including Art Blocks and Coinbase\n- V4 & V5 are minor edits to V3, based on audit feedback\n- V6 audited by Consensys Dilligence ([report](https://consensys.net/diligence/audits/private/2mas58hvaujkby/reservoir-audit-2022-08.pdf) and [response](https://acrobat.adobe.com/link/review?uri=urn:aaid:scds:US:8859bea5-3770-3053-9f14-51e6d78edaa6))\n\n_Note: V6 is currently live on Mainnet and being used by our hosted APIs._\n\nThis contract does not hold any user funds or have permission to spend user funds. All actions must be directly approved by the user, on a per transaction basis. This gives it a very different security profile to the exchange contracts above, or DeFi protocols.\n\n### Deployed Contracts\n\n- Mainnet: [0x178a86d36d89c7fdebea90b739605da7b131ff6a](https://etherscan.io/address/0x178a86d36d89c7fdebea90b739605da7b131ff6a)\n- Goerli: [0xb35d22a4553ab9d2b85e2a606cbae55f844df50c](https://goerli.etherscan.io/address/0xb35d22a4553ab9d2b85e2a606cbae55f844df50c)\n\n### Source Code\n\n- [Router Contract](https://github.com/reservoirprotocol/core/blob/main/packages/contracts/contracts/router/ReservoirV6_0_0.sol)\n- [Router API](https://github.com/reservoirprotocol/indexer/blob/v5/src/api/endpoints/execute/get-execute-buy/v6.ts)\n- [ReservoirKit](https://github.com/reservoirprotocol/reservoir-kit)\n- [Marketplace UI](https://github.com/reservoirprotocol/marketplace)",
        "order": 1,
        "isReference": false,
        "deprecated": false,
        "hidden": false,
        "sync_unique": "",
        "link_url": "",
        "link_external": false,
        "previousSlug": "",
        "slugUpdatedAt": "2022-09-21T16:41:43.047Z",
        "revision": 9,
        "_id": "63f3e45464c04e0012a8fbed",
        "pendingAlgoliaPublish": false,
        "createdAt": "2022-09-21T16:58:38.260Z",
        "updatedAt": "2022-10-24T20:12:00.075Z",
        "user": "62a2345635a16d0608ba84f4",
        "category": "63f3e45464c04e0012a8fb1a",
        "project": "62a239ec3e4c0800663c6d05",
        "version": "63f3e45464c04e0012a8fc52",
        "__v": 0,
        "parentDoc": null,
        "isApi": false,
        "id": "63f3e45464c04e0012a8fbed"
    },
    "meta": {
        "slug": "security-and-smart-contract-audits",
        "type": "docs",
        "parent": null,
        "image": [],
        "title": "Security and Smart Contract Audits",
        "title_raw": "Security and Smart Contract Audits",
        "description": "SummaryAt Reservoir we take smart contract security very seriously to ensure the protection of our developers and their users. Below is a breakdown of the smart contracts used within the Reservoir ecosystem and their security/audit status.ListingReservoir aggregates different NFT exchange protocols,...",
        "_id": "63f3e45464c04e0012a8fbed",
        "hidden": false
    },
    "activeDoc": "security-and-smart-contract-audits"
}